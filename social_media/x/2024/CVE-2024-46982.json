[
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T19:00:24",
        "author_id": "1554950653780365314",
        "data_id": "1881778892735979879",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 21,
        "audience_total": 35887,
        "total_reposts": 20,
        "post_count": 0,
        "author": "entit_y",
        "username": "entit_yy",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T17:26:39",
        "author_id": "1355562031060049920",
        "data_id": "1881755300191248757",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 283,
        "audience_total": 35887,
        "total_reposts": 20,
        "post_count": 0,
        "author": ".",
        "username": "jaxon1177",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T20:37:34",
        "author_id": "1628844381380935681",
        "data_id": "1881803345075269996",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 56,
        "audience_total": 35887,
        "total_reposts": 20,
        "post_count": 0,
        "author": "abdur rahman alif",
        "username": "m1ghtguy_",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T23:28:33",
        "author_id": "1670610482",
        "data_id": "1881846374662369666",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 488,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "dikshant",
        "username": "bboydikshant14",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T22:12:28",
        "author_id": "2785801763",
        "data_id": "1881827227345854838",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 454,
        "audience_total": 35887,
        "total_reposts": 20,
        "post_count": 0,
        "author": "badmash jatt",
        "username": "badmash1337",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T22:55:24",
        "author_id": "981389449",
        "data_id": "1881838030895616240",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 1888,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "xehle",
        "username": "xehle_",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T19:49:38",
        "author_id": "1065001481194143746",
        "data_id": "1881791282638721441",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 202,
        "audience_total": 35887,
        "total_reposts": 20,
        "post_count": 0,
        "author": "0xryz-\ud83c\uddea\ud83c\uddec\ud83c\uddf5\ud83c\uddf8",
        "username": "__r3y4d__",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T19:36:34",
        "author_id": "157036959",
        "data_id": "1881787993054441890",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 9743,
        "audience_total": 35887,
        "total_reposts": 20,
        "post_count": 0,
        "author": "eusebiu blindu",
        "username": "testalways",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T23:03:00",
        "author_id": "121103304",
        "data_id": "1881839947235410029",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 106,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "akhmad yudha",
        "username": "akhmad_yudha",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": "https://pbs.twimg.com/profile_images/1202078002122768386/BflDmMu1_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T23:25:54",
        "author_id": "1628094997240086546",
        "data_id": "1881845707956715660",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 475,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "rami",
        "username": "0x18a6",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T01:19:32",
        "author_id": "46952406",
        "data_id": "1881874305023402290",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 211,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "kasser",
        "username": "xqd",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T02:01:35",
        "author_id": "870908054711259137",
        "data_id": "1881884887231422507",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 3821,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "conqueror - ahmed qaramany",
        "username": "c0nqr0r",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T00:34:16",
        "author_id": "1322103511597813761",
        "data_id": "1881862913499238820",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 14,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "furmilkcat",
        "username": "pham_duc0907",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-21T23:39:54",
        "author_id": "1351007035433897986",
        "data_id": "1881849230308110593",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 354,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "benasin",
        "username": "benasin3",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T08:26:27",
        "author_id": "701280163099639808",
        "data_id": "1881981742623736037",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 13345,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "jayesh madnani",
        "username": "jayesh25_",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T06:45:18",
        "author_id": "756487243343200256",
        "data_id": "1881956285702341101",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 391,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "vishwas reddy",
        "username": "vishsec8",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T04:33:35",
        "author_id": "1564859260252602369",
        "data_id": "1881923138013085939",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 50,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "abhinav bansal",
        "username": "badboi__s",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T08:33:34",
        "author_id": "1405571273078366211",
        "data_id": "1881983534258344371",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 221,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "siddhant shukla",
        "username": "ghost__man01",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T07:38:07",
        "author_id": "1547590822522404864",
        "data_id": "1881969579502825841",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 2,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "ashif_(ai)",
        "username": "webwarriorai",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T05:21:50",
        "author_id": "2162409373",
        "data_id": "1881935279835222250",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 3762,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "0x496",
        "username": "gkhck_",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T09:20:24",
        "author_id": "1592543269912809475",
        "data_id": "1881995320898498989",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 476,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "pedramhz",
        "username": "pedramhzb",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T12:28:24",
        "author_id": "1235877394092658689",
        "data_id": "1882042630114287908",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 258,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "rohit narayanan m",
        "username": "lu513n",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T13:18:08",
        "author_id": "1576850008132882432",
        "data_id": "1882055147976790472",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 3,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "superngorksky",
        "username": "superdonggo",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T11:44:00",
        "author_id": "1565656826712293376",
        "data_id": "1882031458111660447",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 5,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "jeion",
        "username": "jeion3x0",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T12:33:12",
        "author_id": "841004749",
        "data_id": "1882043839080538395",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 314,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "\u2022fl\u00a3xairtor \uf8ff-\u327f !#/bin/zsh\u2022",
        "username": "flexairtor",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": "https://pbs.twimg.com/profile_images/1583494164963917834/6-I81NGz_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-46982",
        "created_datetime": "2025-01-22T10:06:45",
        "author_id": "968950145046990848",
        "data_id": "1882006984691724489",
        "reposts": 1,
        "post": "rt @zhero___: very pleased to announce the release of my new article based on my research that led to cve-2024-46982 titled:\n\nnext.js, cach\u2026",
        "audience": 238,
        "audience_total": 37181,
        "total_reposts": 26,
        "post_count": 0,
        "author": "nekrom",
        "username": "nekrom__",
        "v_score": 0.25602,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "NEXT.JS IS A REACT FRAMEWORK FOR BUILDING FULL-STACK WEB APPLICATIONS. BY SENDING A CRAFTED HTTP REQUEST, IT IS POSSIBLE TO POISON THE CACHE OF A NON-DYNAMIC SERVER-SIDE RENDERED ROUTE IN THE PAGES ROUTER (THIS DOES NOT AFFECT THE APP ROUTER). WHEN THIS CRAFTED REQUEST IS SENT IT COULD COERCE NEXT.JS TO CACHE A ROUTE THAT IS MEANT TO NOT BE CACHED AND SEND A `CACHE-CONTROL: S-MAXAGE=1, STALE-WHILE-REVALIDATE` HEADER WHICH SOME UPSTREAM CDNS MAY CACHE AS WELL. TO BE POTENTIALLY AFFECTED ALL OF THE FOLLOWING MUST APPLY: 1. NEXT.JS BETWEEN 13.5.1 AND 14.2.9, 2. USING PAGES ROUTER, & 3. USING NON-DYNAMIC SERVER-SIDE RENDERED ROUTES E.G. `PAGES/DASHBOARD.TSX` NOT `PAGES/BLOG/[SLUG].TSX`. THIS VULNERABILITY WAS RESOLVED IN NEXT.JS V13.5.7, V14.2.10, AND LATER. WE RECOMMEND UPGRADING REGARDLESS OF WHETHER YOU CAN REPRODUCE THE ISSUE OR NOT. THERE ARE NO OFFICIAL OR RECOMMENDED WORKAROUNDS FOR THIS ISSUE, WE RECOMMEND THAT USERS PATCH TO A SAFE VERSION.",
        "last_modified_datetime": "2024-09-20 12:30:00",
        "published_datetime": "2024-09-17 22:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    }
]
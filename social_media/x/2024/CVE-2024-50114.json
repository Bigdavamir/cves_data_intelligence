[
    {
        "cve": "CVE-2024-50114",
        "created_datetime": "2024-11-06T14:08:40",
        "author_id": "95211322",
        "data_id": "1854163999098536082",
        "reposts": 1,
        "post": "rt @xvonfers: (cve-2024-50114)[kvm][arm64]slab-uaf in kvm_put_kvm(when tearing down a vm)\nhttps://t.co/utnvlv4foh",
        "audience": 2592,
        "audience_total": 2592,
        "total_reposts": 1,
        "post_count": 0,
        "author": "anderson nascimento",
        "username": "andersonc0d3",
        "v_score": null,
        "e_score": null,
        "base_score": null,
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nKVM: ARM64: UNREGISTER REDISTRIBUTOR FOR FAILED VCPU CREATION\n\nALEX REPORTS THAT SYZKALLER HAS MANAGED TO TRIGGER A USE-AFTER-FREE WHEN\nTEARING DOWN A VM:\n\n  BUG: KASAN: SLAB-USE-AFTER-FREE IN KVM_PUT_KVM+0X300/0XE68 VIRT/KVM/KVM_MAIN.C:5769\n  READ OF SIZE 8 AT ADDR FFFFFF801C6890D0 BY TASK SYZ.3.2219/10758\n\n  CPU: 3 UID: 0 PID: 10758 COMM: SYZ.3.2219 NOT TAINTED 6.11.0-RC6-DIRTY #64\n  HARDWARE NAME: LINUX,DUMMY-VIRT (DT)\n  CALL TRACE:\n   DUMP_BACKTRACE+0X17C/0X1A8 ARCH/ARM64/KERNEL/STACKTRACE.C:317\n   SHOW_STACK+0X2C/0X3C ARCH/ARM64/KERNEL/STACKTRACE.C:324\n   __DUMP_STACK LIB/DUMP_STACK.C:93 [INLINE]\n   DUMP_STACK_LVL+0X94/0XC0 LIB/DUMP_STACK.C:119\n   PRINT_REPORT+0X144/0X7A4 MM/KASAN/REPORT.C:377\n   KASAN_REPORT+0XCC/0X128 MM/KASAN/REPORT.C:601\n   __ASAN_REPORT_LOAD8_NOABORT+0X20/0X2C MM/KASAN/REPORT_GENERIC.C:381\n   KVM_PUT_KVM+0X300/0XE68 VIRT/KVM/KVM_MAIN.C:5769\n   KVM_VM_RELEASE+0X4C/0X60 VIRT/KVM/KVM_MAIN.C:1409\n   __FPUT+0X198/0X71C FS/FILE_TABLE.C:422\n   ____FPUT+0X20/0X30 FS/FILE_TABLE.C:450\n   TASK_WORK_RUN+0X1CC/0X23C KERNEL/TASK_WORK.C:228\n   DO_NOTIFY_RESUME+0X144/0X1A0 INCLUDE/LINUX/RESUME_USER_MODE.H:50\n   EL0_SVC+0X64/0X68 ARCH/ARM64/KERNEL/ENTRY-COMMON.C:169\n   EL0T_64_SYNC_HANDLER+0X90/0XFC ARCH/ARM64/KERNEL/ENTRY-COMMON.C:730\n   EL0T_64_SYNC+0X190/0X194 ARCH/ARM64/KERNEL/ENTRY.S:598\n\nUPON CLOSER INSPECTION, IT APPEARS THAT WE DO NOT PROPERLY TEAR DOWN THE\nMMIO REGISTRATION FOR A VCPU THAT FAILS CREATION LATE IN THE GAME, E.G.\nA VCPU W/ THE SAME ID ALREADY EXISTS IN THE VM.\n\nIT IS IMPORTANT TO CONSIDER THE CONTEXT OF COMMIT THAT INTRODUCED THIS BUG\nBY MOVING THE UNREGISTRATION OUT OF __KVM_VGIC_VCPU_DESTROY(). THAT\nCHANGE CORRECTLY SOUGHT TO AVOID AN SRCU V. CONFIG_LOCK INVERSION BY\nBREAKING UP THE VCPU TEARDOWN INTO TWO PARTS, ONE GUARDED BY THE\nCONFIG_LOCK.\n\nFIX THE USE-AFTER-FREE WHILE AVOIDING LOCK INVERSION BY ADDING A\nSPECIAL-CASED UNREGISTRATION TO __KVM_VGIC_VCPU_DESTROY(). THIS IS SAFE\nBECAUSE FAILED VCPUS ARE TORN DOWN OUTSIDE OF THE CONFIG_LOCK.",
        "last_modified_datetime": "2024-11-05 18:15:00",
        "published_datetime": "2024-11-05 18:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    }
]
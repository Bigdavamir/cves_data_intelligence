[
    {
        "cve": "CVE-2024-36972",
        "created_datetime": "2025-02-05T23:31:04",
        "author_id": "113823427",
        "data_id": "1887282825000296703",
        "reposts": 1,
        "post": "rt @dinosn: poc releases for linux kernel flaw cve-2024-36972: double free flaw enables privilege escalation and container escape https://t\u2026",
        "audience": 738,
        "audience_total": 1263,
        "total_reposts": 3,
        "post_count": 0,
        "author": "jm",
        "username": "sourcefrenchy",
        "v_score": 0.244585,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nAF_UNIX: UPDATE UNIX_SK(SK)->OOB_SKB UNDER SK_RECEIVE_QUEUE LOCK.\n\nBILLY JHENG BING-JHONG REPORTED A RACE BETWEEN __UNIX_GC() AND\nQUEUE_OOB().\n\n__UNIX_GC() TRIES TO GARBAGE-COLLECT CLOSE()D INFLIGHT SOCKETS,\nAND THEN IF THE SOCKET HAS MSG_OOB IN UNIX_SK(SK)->OOB_SKB, GC\nWILL DROP THE REFERENCE AND SET NULL TO IT LOCKLESSLY.\n\nHOWEVER, THE PEER SOCKET STILL CAN SEND MSG_OOB MESSAGE AND\nQUEUE_OOB() CAN UPDATE UNIX_SK(SK)->OOB_SKB CONCURRENTLY, LEADING\nNULL POINTER DEREFERENCE. [0]\n\nTO FIX THE ISSUE, LETS UPDATE UNIX_SK(SK)->OOB_SKB UNDER THE\nSK_RECEIVE_QUEUES LOCK AND TAKE IT EVERYWHERE WE TOUCH OOB_SKB.\n\nNOTE THAT WE DEFER KFREE_SKB() IN MANAGE_OOB() TO SILENCE LOCKDEP\nFALSE-POSITIVE (SEE [1]).\n\n[0]:\nBUG: KERNEL NULL POINTER DEREFERENCE, ADDRESS: 0000000000000008\n PF: SUPERVISOR WRITE ACCESS IN KERNEL MODE\n PF: ERROR_CODE(0X0002) - NOT-PRESENT PAGE\nPGD 8000000009F5E067 P4D 8000000009F5E067 PUD 9F5D067 PMD 0\nOOPS: 0002 [#1] PREEMPT SMP PTI\nCPU: 3 PID: 50 COMM: KWORKER/3:1 NOT TAINTED 6.9.0-RC5-00191-GD091E579B864 #110\nHARDWARE NAME: QEMU STANDARD PC (I440FX + PIIX, 1996), BIOS REL-1.16.0-0-GD239552CE722-PREBUILT.QEMU.ORG 04/01/2014\nWORKQUEUE: EVENTS DELAYED_FPUT\nRIP: 0010:SKB_DEQUEUE (./INCLUDE/LINUX/SKBUFF.H:2386 ./INCLUDE/LINUX/SKBUFF.H:2402 NET/CORE/SKBUFF.C:3847)\nCODE: 39 E3 74 3E 8B 43 10 48 89 EF 83 E8 01 89 43 10 49 8B 44 24 08 49 C7 44 24 08 00 00 00 00 49 8B 14 24 49 C7 04 24 00 00 00 00 <48> 89 42 08 48 89 10 E8 E7 C5 42 00 4C 89 E0 5B 5D 41 5C C3 CC CC\nRSP: 0018:FFFFC900001BFD48 EFLAGS: 00000002\nRAX: 0000000000000000 RBX: FFFF8880088F5AE8 RCX: 00000000361289F9\nRDX: 0000000000000000 RSI: 0000000000000206 RDI: FFFF8880088F5B00\nRBP: FFFF8880088F5B00 R08: 0000000000080000 R09: 0000000000000001\nR10: 0000000000000003 R11: 0000000000000001 R12: FFFF8880056B6A00\nR13: FFFF8880088F5280 R14: 0000000000000001 R15: FFFF8880088F5A80\nFS:  0000000000000000(0000) GS:FFFF88807DD80000(0000) KNLGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000008 CR3: 0000000006314000 CR4: 00000000007506F0\nPKRU: 55555554\nCALL TRACE:\n <TASK>\n UNIX_RELEASE_SOCK (NET/UNIX/AF_UNIX.C:654)\n UNIX_RELEASE (NET/UNIX/AF_UNIX.C:1050)\n __SOCK_RELEASE (NET/SOCKET.C:660)\n SOCK_CLOSE (NET/SOCKET.C:1423)\n __FPUT (FS/FILE_TABLE.C:423)\n DELAYED_FPUT (FS/FILE_TABLE.C:444 (DISCRIMINATOR 3))\n PROCESS_ONE_WORK (KERNEL/WORKQUEUE.C:3259)\n WORKER_THREAD (KERNEL/WORKQUEUE.C:3329 KERNEL/WORKQUEUE.C:3416)\n KTHREAD (KERNEL/KTHREAD.C:388)\n RET_FROM_FORK (ARCH/X86/KERNEL/PROCESS.C:153)\n RET_FROM_FORK_ASM (ARCH/X86/ENTRY/ENTRY_64.S:257)\n </TASK>\nMODULES LINKED IN:\nCR2: 0000000000000008",
        "last_modified_datetime": "2024-09-05 16:35:00",
        "published_datetime": "2024-06-10 15:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36972",
        "created_datetime": "2025-02-06T10:48:24",
        "author_id": "156194447",
        "data_id": "1887453282081165540",
        "reposts": 1,
        "post": "rt @dinosn: poc releases for linux kernel flaw cve-2024-36972: double free flaw enables privilege escalation and container escape https://t\u2026",
        "audience": 520,
        "audience_total": 1263,
        "total_reposts": 3,
        "post_count": 0,
        "author": "ashokkrishna(le0li9ht)",
        "username": "ashokkrishna99",
        "v_score": 0.244585,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nAF_UNIX: UPDATE UNIX_SK(SK)->OOB_SKB UNDER SK_RECEIVE_QUEUE LOCK.\n\nBILLY JHENG BING-JHONG REPORTED A RACE BETWEEN __UNIX_GC() AND\nQUEUE_OOB().\n\n__UNIX_GC() TRIES TO GARBAGE-COLLECT CLOSE()D INFLIGHT SOCKETS,\nAND THEN IF THE SOCKET HAS MSG_OOB IN UNIX_SK(SK)->OOB_SKB, GC\nWILL DROP THE REFERENCE AND SET NULL TO IT LOCKLESSLY.\n\nHOWEVER, THE PEER SOCKET STILL CAN SEND MSG_OOB MESSAGE AND\nQUEUE_OOB() CAN UPDATE UNIX_SK(SK)->OOB_SKB CONCURRENTLY, LEADING\nNULL POINTER DEREFERENCE. [0]\n\nTO FIX THE ISSUE, LETS UPDATE UNIX_SK(SK)->OOB_SKB UNDER THE\nSK_RECEIVE_QUEUES LOCK AND TAKE IT EVERYWHERE WE TOUCH OOB_SKB.\n\nNOTE THAT WE DEFER KFREE_SKB() IN MANAGE_OOB() TO SILENCE LOCKDEP\nFALSE-POSITIVE (SEE [1]).\n\n[0]:\nBUG: KERNEL NULL POINTER DEREFERENCE, ADDRESS: 0000000000000008\n PF: SUPERVISOR WRITE ACCESS IN KERNEL MODE\n PF: ERROR_CODE(0X0002) - NOT-PRESENT PAGE\nPGD 8000000009F5E067 P4D 8000000009F5E067 PUD 9F5D067 PMD 0\nOOPS: 0002 [#1] PREEMPT SMP PTI\nCPU: 3 PID: 50 COMM: KWORKER/3:1 NOT TAINTED 6.9.0-RC5-00191-GD091E579B864 #110\nHARDWARE NAME: QEMU STANDARD PC (I440FX + PIIX, 1996), BIOS REL-1.16.0-0-GD239552CE722-PREBUILT.QEMU.ORG 04/01/2014\nWORKQUEUE: EVENTS DELAYED_FPUT\nRIP: 0010:SKB_DEQUEUE (./INCLUDE/LINUX/SKBUFF.H:2386 ./INCLUDE/LINUX/SKBUFF.H:2402 NET/CORE/SKBUFF.C:3847)\nCODE: 39 E3 74 3E 8B 43 10 48 89 EF 83 E8 01 89 43 10 49 8B 44 24 08 49 C7 44 24 08 00 00 00 00 49 8B 14 24 49 C7 04 24 00 00 00 00 <48> 89 42 08 48 89 10 E8 E7 C5 42 00 4C 89 E0 5B 5D 41 5C C3 CC CC\nRSP: 0018:FFFFC900001BFD48 EFLAGS: 00000002\nRAX: 0000000000000000 RBX: FFFF8880088F5AE8 RCX: 00000000361289F9\nRDX: 0000000000000000 RSI: 0000000000000206 RDI: FFFF8880088F5B00\nRBP: FFFF8880088F5B00 R08: 0000000000080000 R09: 0000000000000001\nR10: 0000000000000003 R11: 0000000000000001 R12: FFFF8880056B6A00\nR13: FFFF8880088F5280 R14: 0000000000000001 R15: FFFF8880088F5A80\nFS:  0000000000000000(0000) GS:FFFF88807DD80000(0000) KNLGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000008 CR3: 0000000006314000 CR4: 00000000007506F0\nPKRU: 55555554\nCALL TRACE:\n <TASK>\n UNIX_RELEASE_SOCK (NET/UNIX/AF_UNIX.C:654)\n UNIX_RELEASE (NET/UNIX/AF_UNIX.C:1050)\n __SOCK_RELEASE (NET/SOCKET.C:660)\n SOCK_CLOSE (NET/SOCKET.C:1423)\n __FPUT (FS/FILE_TABLE.C:423)\n DELAYED_FPUT (FS/FILE_TABLE.C:444 (DISCRIMINATOR 3))\n PROCESS_ONE_WORK (KERNEL/WORKQUEUE.C:3259)\n WORKER_THREAD (KERNEL/WORKQUEUE.C:3329 KERNEL/WORKQUEUE.C:3416)\n KTHREAD (KERNEL/KTHREAD.C:388)\n RET_FROM_FORK (ARCH/X86/KERNEL/PROCESS.C:153)\n RET_FROM_FORK_ASM (ARCH/X86/ENTRY/ENTRY_64.S:257)\n </TASK>\nMODULES LINKED IN:\nCR2: 0000000000000008",
        "last_modified_datetime": "2024-09-05 16:35:00",
        "published_datetime": "2024-06-10 15:15:00",
        "vendor_logo": null,
        "profile_url": "https://pbs.twimg.com/profile_images/1399710105331900418/ySwddolR_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2024-36972",
        "created_datetime": "2025-02-05T23:37:04",
        "author_id": "1879148048414351360",
        "data_id": "1887284337009434846",
        "reposts": 1,
        "post": "rt @dinosn: poc releases for linux kernel flaw cve-2024-36972: double free flaw enables privilege escalation and container escape https://t\u2026",
        "audience": 5,
        "audience_total": 1263,
        "total_reposts": 3,
        "post_count": 0,
        "author": "__noir__",
        "username": "rganehsa87150",
        "v_score": 0.244585,
        "e_score": 0.00045,
        "base_score": "7.5",
        "description": "IN THE LINUX KERNEL, THE FOLLOWING VULNERABILITY HAS BEEN RESOLVED:\n\nAF_UNIX: UPDATE UNIX_SK(SK)->OOB_SKB UNDER SK_RECEIVE_QUEUE LOCK.\n\nBILLY JHENG BING-JHONG REPORTED A RACE BETWEEN __UNIX_GC() AND\nQUEUE_OOB().\n\n__UNIX_GC() TRIES TO GARBAGE-COLLECT CLOSE()D INFLIGHT SOCKETS,\nAND THEN IF THE SOCKET HAS MSG_OOB IN UNIX_SK(SK)->OOB_SKB, GC\nWILL DROP THE REFERENCE AND SET NULL TO IT LOCKLESSLY.\n\nHOWEVER, THE PEER SOCKET STILL CAN SEND MSG_OOB MESSAGE AND\nQUEUE_OOB() CAN UPDATE UNIX_SK(SK)->OOB_SKB CONCURRENTLY, LEADING\nNULL POINTER DEREFERENCE. [0]\n\nTO FIX THE ISSUE, LETS UPDATE UNIX_SK(SK)->OOB_SKB UNDER THE\nSK_RECEIVE_QUEUES LOCK AND TAKE IT EVERYWHERE WE TOUCH OOB_SKB.\n\nNOTE THAT WE DEFER KFREE_SKB() IN MANAGE_OOB() TO SILENCE LOCKDEP\nFALSE-POSITIVE (SEE [1]).\n\n[0]:\nBUG: KERNEL NULL POINTER DEREFERENCE, ADDRESS: 0000000000000008\n PF: SUPERVISOR WRITE ACCESS IN KERNEL MODE\n PF: ERROR_CODE(0X0002) - NOT-PRESENT PAGE\nPGD 8000000009F5E067 P4D 8000000009F5E067 PUD 9F5D067 PMD 0\nOOPS: 0002 [#1] PREEMPT SMP PTI\nCPU: 3 PID: 50 COMM: KWORKER/3:1 NOT TAINTED 6.9.0-RC5-00191-GD091E579B864 #110\nHARDWARE NAME: QEMU STANDARD PC (I440FX + PIIX, 1996), BIOS REL-1.16.0-0-GD239552CE722-PREBUILT.QEMU.ORG 04/01/2014\nWORKQUEUE: EVENTS DELAYED_FPUT\nRIP: 0010:SKB_DEQUEUE (./INCLUDE/LINUX/SKBUFF.H:2386 ./INCLUDE/LINUX/SKBUFF.H:2402 NET/CORE/SKBUFF.C:3847)\nCODE: 39 E3 74 3E 8B 43 10 48 89 EF 83 E8 01 89 43 10 49 8B 44 24 08 49 C7 44 24 08 00 00 00 00 49 8B 14 24 49 C7 04 24 00 00 00 00 <48> 89 42 08 48 89 10 E8 E7 C5 42 00 4C 89 E0 5B 5D 41 5C C3 CC CC\nRSP: 0018:FFFFC900001BFD48 EFLAGS: 00000002\nRAX: 0000000000000000 RBX: FFFF8880088F5AE8 RCX: 00000000361289F9\nRDX: 0000000000000000 RSI: 0000000000000206 RDI: FFFF8880088F5B00\nRBP: FFFF8880088F5B00 R08: 0000000000080000 R09: 0000000000000001\nR10: 0000000000000003 R11: 0000000000000001 R12: FFFF8880056B6A00\nR13: FFFF8880088F5280 R14: 0000000000000001 R15: FFFF8880088F5A80\nFS:  0000000000000000(0000) GS:FFFF88807DD80000(0000) KNLGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000008 CR3: 0000000006314000 CR4: 00000000007506F0\nPKRU: 55555554\nCALL TRACE:\n <TASK>\n UNIX_RELEASE_SOCK (NET/UNIX/AF_UNIX.C:654)\n UNIX_RELEASE (NET/UNIX/AF_UNIX.C:1050)\n __SOCK_RELEASE (NET/SOCKET.C:660)\n SOCK_CLOSE (NET/SOCKET.C:1423)\n __FPUT (FS/FILE_TABLE.C:423)\n DELAYED_FPUT (FS/FILE_TABLE.C:444 (DISCRIMINATOR 3))\n PROCESS_ONE_WORK (KERNEL/WORKQUEUE.C:3259)\n WORKER_THREAD (KERNEL/WORKQUEUE.C:3329 KERNEL/WORKQUEUE.C:3416)\n KTHREAD (KERNEL/KTHREAD.C:388)\n RET_FROM_FORK (ARCH/X86/KERNEL/PROCESS.C:153)\n RET_FROM_FORK_ASM (ARCH/X86/ENTRY/ENTRY_64.S:257)\n </TASK>\nMODULES LINKED IN:\nCR2: 0000000000000008",
        "last_modified_datetime": "2024-09-05 16:35:00",
        "published_datetime": "2024-06-10 15:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    }
]
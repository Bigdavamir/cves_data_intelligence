[
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-13T23:26:43",
        "author_id": "139850182",
        "data_id": "1890180834151555331",
        "reposts": 1,
        "post": "rt @stephenfewer: today @rapid7 has disclosed cve-2025-1094, a new postgresql sqli vuln we discovered while researching cve-2024-12356 in b\u2026",
        "audience": 6559,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "scriptjunkie (matt)",
        "username": "scriptjunkie1",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T01:08:43",
        "author_id": "155434175",
        "data_id": "1890206504969711669",
        "reposts": 1,
        "post": "rt @rapid7: \ud83d\udea8 in january 2025, rapid7 discovered a high-severity sql injection vulnerability, cve-2025-1094, affecting the #postgresql inte\u2026",
        "audience": 39,
        "audience_total": 41007,
        "total_reposts": 23,
        "post_count": 2,
        "author": "show",
        "username": "showthelow",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T02:42:22",
        "author_id": "8236572",
        "data_id": "1890230073137197392",
        "reposts": 1,
        "post": "rt @stephenfewer: today @rapid7 has disclosed cve-2025-1094, a new postgresql sqli vuln we discovered while researching cve-2024-12356 in b\u2026",
        "audience": 27876,
        "audience_total": 41007,
        "total_reposts": 23,
        "post_count": 2,
        "author": "ryan naraine",
        "username": "ryanaraine",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T05:07:05",
        "author_id": "1749757936484728832",
        "data_id": "1890266492337528865",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 392,
        "audience_total": 41007,
        "total_reposts": 23,
        "post_count": 2,
        "author": "the naeth",
        "username": "tnaeth123",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T08:11:34",
        "author_id": "1378655029",
        "data_id": "1890312917251162521",
        "reposts": 1,
        "post": "rt @netlas_io: cve-2025-1094: improper neutralization of quoting syntax in postgresql functions, 8.1 rating\u2757\ufe0f\n\na vulnerability in some func\u2026",
        "audience": 70,
        "audience_total": 42646,
        "total_reposts": 27,
        "post_count": 3,
        "author": "makhrov vyacheslav",
        "username": "v_makhrov",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T06:43:24",
        "author_id": "14488562",
        "data_id": "1890290729261625549",
        "reposts": 1,
        "post": "rt @t_nihonmatsu: postgresql\u306e\u6587\u5b57\u5217\u30a8\u30b9\u30b1\u30fc\u30d7\u95a2\u6570\u306f\u7121\u52b9\u306autf-8\u6587\u5b57\u306b\u542b\u307e\u308c\u308b\u4e0d\u6b63\u306a\u30d0\u30a4\u30c8\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u3001psql\u306e\u89e3\u6790\u306b\u3088\u3063\u3066\u4e88\u671f\u3057\u306a\u3044\u5f62\u3067\u6271\u308f\u308c\u308b\u3053\u3068\u3067sql\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u3068\u306a\u308b\u8106\u5f31\u6027 cve-2025-1094\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u4fee\u6b63\u2026",
        "audience": 2366,
        "audience_total": 41007,
        "total_reposts": 23,
        "post_count": 2,
        "author": "\u30b5\u30eb\u30c8",
        "username": "saruto",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T13:01:54",
        "author_id": "1635099816215851008",
        "data_id": "1890385983771718129",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 14,
        "audience_total": 42646,
        "total_reposts": 27,
        "post_count": 3,
        "author": "chris techjourney",
        "username": "christechvc",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T11:18:54",
        "author_id": "30956648",
        "data_id": "1890360062595518485",
        "reposts": 1,
        "post": "rt @catc0n: new rapid7 vuln disclosure c/o @stephenfewer: cve-2025-1094 is a sql injection flaw in postgresql's psql interactive tool that\u2026",
        "audience": 218,
        "audience_total": 42646,
        "total_reposts": 27,
        "post_count": 3,
        "author": "walter magliano",
        "username": "wmagliano",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T13:47:18",
        "author_id": "953682855372009472",
        "data_id": "1890397408258908587",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 314,
        "audience_total": 42646,
        "total_reposts": 27,
        "post_count": 3,
        "author": "ncu-isao",
        "username": "ncuisao",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T11:26:56",
        "author_id": "1344491316139462658",
        "data_id": "1890362084468101192",
        "reposts": 1,
        "post": "rt @stephenfewer: today @rapid7 has disclosed cve-2025-1094, a new postgresql sqli vuln we discovered while researching cve-2024-12356 in b\u2026",
        "audience": 16,
        "audience_total": 42646,
        "total_reposts": 27,
        "post_count": 3,
        "author": "syntheticliver",
        "username": "almond65808926",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T16:10:16",
        "author_id": "438353100",
        "data_id": "1890433388361699546",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 443,
        "audience_total": 44921,
        "total_reposts": 32,
        "post_count": 3,
        "author": "redport ia",
        "username": "redport_ia",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T18:30:41",
        "author_id": "123219953",
        "data_id": "1890468725125493018",
        "reposts": 1,
        "post": "rt @ccbalert: warning: high severity sql injection vulnerability in #postgresql. #cve-2025-1094 cvss: 8.1. this sqli vulnerability can lead\u2026",
        "audience": 1067,
        "audience_total": 48822,
        "total_reposts": 35,
        "post_count": 3,
        "author": "phd",
        "username": "phjedi",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T17:14:46",
        "author_id": "T2_1GRE3RWZYG",
        "data_id": "1IPFK3Q",
        "reposts": 2,
        "post": "postgresql &amp; beyondtrust zero-days exploited in coordinated attacks",
        "audience": 24,
        "audience_total": 44921,
        "total_reposts": 32,
        "post_count": 3,
        "author": "dark-marc",
        "username": "t3_1ipfk3q",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T17:18:37",
        "author_id": "T2_1GRE3RWZYG",
        "data_id": "1IPFNHS",
        "reposts": 4,
        "post": "postgresql &amp; beyondtrust zero-days exploited in coordinated attacks",
        "audience": 630,
        "audience_total": 48822,
        "total_reposts": 35,
        "post_count": 3,
        "author": "dark-marc",
        "username": "t3_1ipfnhs",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T17:18:31",
        "author_id": "T2_1GRE3RWZYG",
        "data_id": "1IPFNER",
        "reposts": 2,
        "post": "postgresql &amp; beyondtrust zero-days exploited in coordinated attacks",
        "audience": 326,
        "audience_total": 44921,
        "total_reposts": 32,
        "post_count": 3,
        "author": "dark-marc",
        "username": "t3_1ipfner",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T17:18:42",
        "author_id": "T2_1GRE3RWZYG",
        "data_id": "1IPFNKF",
        "reposts": 5,
        "post": "postgresql &amp; beyondtrust zero-days exploited in coordinated attacks",
        "audience": 712,
        "audience_total": 48822,
        "total_reposts": 35,
        "post_count": 3,
        "author": "dark-marc",
        "username": "t3_1ipfnkf",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T01:30:48",
        "author_id": "2976398873",
        "data_id": "1890574450506031235",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 374,
        "audience_total": 48822,
        "total_reposts": 35,
        "post_count": 3,
        "author": "mohamed amine \ud83c\uddf9\ud83c\uddf3",
        "username": "da_crypto_freak",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T02:30:13",
        "author_id": "1873293971876900864",
        "data_id": "1890589403044552827",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 236,
        "audience_total": 48822,
        "total_reposts": 35,
        "post_count": 3,
        "author": "jace hawkins",
        "username": "thejacehawkins",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T08:54:22",
        "author_id": "1096735026476171264",
        "data_id": "1890686075963675013",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 119,
        "audience_total": 50252,
        "total_reposts": 40,
        "post_count": 3,
        "author": "trillionsx",
        "username": "trillionsx_ai",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T08:54:34",
        "author_id": "1890683220594937856",
        "data_id": "1890686125842346306",
        "reposts": 1,
        "post": "rt @catc0n: new rapid7 vuln disclosure c/o @stephenfewer: cve-2025-1094 is a sql injection flaw in postgresql's psql interactive tool that\u2026",
        "audience": 0,
        "audience_total": 50252,
        "total_reposts": 40,
        "post_count": 3,
        "author": "uraura",
        "username": "data_br_empire",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T09:43:14",
        "author_id": "T2_BDL6K",
        "data_id": "1IPY1C7",
        "reposts": 3,
        "post": "cve-2025-1094 postgresql quoting apis miss neutralizing quoting syntax in text that fails encoding validation",
        "audience": 288,
        "audience_total": 50252,
        "total_reposts": 40,
        "post_count": 3,
        "author": "digicat",
        "username": "t3_1ipy1c7",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T17:32:39",
        "author_id": "1568272986326827013",
        "data_id": "1890816507065589802",
        "reposts": 0,
        "post": "postgresql \u306e sql \u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306e\u6b20\u9665 (cve-2025-1094) \u3068 beyondtrust \u306e\u30ea\u30e2\u30fc\u30c8 \u30a2\u30af\u30bb\u30b9\u306e\u30d0\u30b0 (cve-2024-12356) \u3092\u60aa\u7528\u3057\u305f\u5371\u967a\u306a\u30b3\u30f3\u30dc\u653b\u6483\u304c\u767a\u898b\u3055\u308c\u307e\u3057\u305f\u3002  \u4e21\u65b9\u306e\u8106\u5f31\u6027\u306b\u5bfe\u3059\u308b\u30d1\u30c3\u30c1\u304c\u5229\u7528\u53ef\u80fd\u3067\u3059\u3002  \u8a73\u7d30\u3092\u8aad\u3093\u3067\u4eca\u3059\u3050\u30b7\u30b9\u30c6\u30e0\u3092\u4fdd\u8b77\u3057\u3066\u304f\u3060\u3055\u3044: https://t.co/lqbgiuuf5l",
        "audience": 83,
        "audience_total": 56681,
        "total_reposts": 43,
        "post_count": 3,
        "author": "\u6280\u5de7\uff20\ud83d\udcd8\ud83d\udd8a\u30d6\u30c3\u30af\u30de\u30fc\u30afbot",
        "username": "gikobookmark",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": "https://pbs.twimg.com/profile_images/1578305128540819456/kFkelDLJ_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T18:47:25",
        "author_id": "541159387",
        "data_id": "1890835322730078416",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 447,
        "audience_total": 79054,
        "total_reposts": 46,
        "post_count": 3,
        "author": "rb ceo | xtirpe team valorant | ceo ofiandujar |",
        "username": "duendetm",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T18:18:23",
        "author_id": "946543109856378880",
        "data_id": "1890828015086567779",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 997,
        "audience_total": 56681,
        "total_reposts": 43,
        "post_count": 3,
        "author": "multicloudman",
        "username": "multicloudman",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T14:28:43",
        "author_id": "801177749062815745",
        "data_id": "1890770218932187466",
        "reposts": 1,
        "post": "rt @cvenew: cve-2025-1094 improper neutralization of quoting syntax in postgresql libpq functions pqescapeliteral(), pqescapeidentifier(),\u2026",
        "audience": 16,
        "audience_total": 56681,
        "total_reposts": 43,
        "post_count": 3,
        "author": "pierre ramos",
        "username": "pierreramos9",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T21:35:26",
        "author_id": "61860897",
        "data_id": "1890877603591921766",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 1157,
        "audience_total": 80736,
        "total_reposts": 48,
        "post_count": 3,
        "author": "independiente excluido. #somosdel95% sin partido",
        "username": "taxusrock",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T22:46:43",
        "author_id": "3012742390",
        "data_id": "1890895544765096203",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 323,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "\ud83e\ude90 hackwy\u2728",
        "username": "jawypinto",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T19:53:46",
        "author_id": "1405030575031848968",
        "data_id": "1890852018924724560",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 114,
        "audience_total": 79054,
        "total_reposts": 46,
        "post_count": 3,
        "author": "zil00g",
        "username": "zil00g",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T21:57:09",
        "author_id": "146804702",
        "data_id": "1890883069931880481",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 188,
        "audience_total": 80736,
        "total_reposts": 48,
        "post_count": 3,
        "author": "gucho garcia",
        "username": "guchogarcia",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T22:24:35",
        "author_id": "272686270",
        "data_id": "1890889972401467883",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 493,
        "audience_total": 80736,
        "total_reposts": 48,
        "post_count": 3,
        "author": "andr\u00e9s orozco",
        "username": "andres_riscv",
        "v_score": 0.620531,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T00:33:13",
        "author_id": "64004671",
        "data_id": "1890922343993688412",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 1953,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "antonio gonz\u00e1lez c.",
        "username": "tonygonzalezc",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T01:26:18",
        "author_id": "147968383",
        "data_id": "1890935704311464109",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 1933,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "sergio rivera \ud83c\uddf2\ud83c\uddfd",
        "username": "sergioriverar",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T02:09:13",
        "author_id": "1443983362595639299",
        "data_id": "1890946503545377064",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 15,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "luis gavilanes",
        "username": "luisgav35640542",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T04:23:36",
        "author_id": "3176549533",
        "data_id": "1890980324772844027",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 456,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "juan carlos ion",
        "username": "ulyaot",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": "https://pbs.twimg.com/profile_images/1165819661612662784/BcDhBzi1_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T05:25:43",
        "author_id": "78366880",
        "data_id": "1890995954725027867",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 407,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "vidalinux",
        "username": "vidalinux",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T07:25:25",
        "author_id": "1427288136514564096",
        "data_id": "1891026078090530875",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 340,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "mad chemist",
        "username": "madch3mlst",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T04:32:47",
        "author_id": "216027807",
        "data_id": "1890982633456165359",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 64,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "jotape",
        "username": "jotape_vm",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T03:47:36",
        "author_id": "1174470944921980929",
        "data_id": "1890971262333190426",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 163,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "maiky san \uea00",
        "username": "elmaikysan",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T10:11:04",
        "author_id": "3156088713",
        "data_id": "1891067767417143322",
        "reposts": 1,
        "post": "rt @ccbalert: warning: high severity sql injection vulnerability in #postgresql. #cve-2025-1094 cvss: 8.1. this sqli vulnerability can lead\u2026",
        "audience": 1382,
        "audience_total": 90322,
        "total_reposts": 59,
        "post_count": 3,
        "author": "infosecanon",
        "username": "infosecanon",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T11:41:30",
        "author_id": "341663684",
        "data_id": "1891090523420516684",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 324,
        "audience_total": 90322,
        "total_reposts": 59,
        "post_count": 3,
        "author": "jrxyzz",
        "username": "xjrxz",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T10:07:31",
        "author_id": "120096298",
        "data_id": "1891066874651181096",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 4723,
        "audience_total": 82191,
        "total_reposts": 51,
        "post_count": 3,
        "author": "j\u00f8k\u03c3r",
        "username": "matarturo",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T16:31:53",
        "author_id": "393118283",
        "data_id": "1891163600007348357",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 941,
        "audience_total": 90322,
        "total_reposts": 59,
        "post_count": 3,
        "author": "david ut\u00f3n",
        "username": "david_uton",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T15:39:43",
        "author_id": "833142309407555584",
        "data_id": "1891150474239205401",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 17005,
        "audience_total": 90322,
        "total_reposts": 59,
        "post_count": 3,
        "author": "es geeks",
        "username": "esgeeks",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": "https://pbs.twimg.com/profile_images/1552132507922989057/I8jFo8Gz_normal.png",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T17:52:59",
        "author_id": "10792522",
        "data_id": "1891184011562700963",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 4427,
        "audience_total": 90322,
        "total_reposts": 59,
        "post_count": 3,
        "author": "c\u03b3be\u027ef\u027e\u0251ncis \ud835\udd4f",
        "username": "cyberfrancis",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T21:47:59",
        "author_id": "517622231",
        "data_id": "1891243152335405537",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 1234,
        "audience_total": 90322,
        "total_reposts": 59,
        "post_count": 3,
        "author": "juan ramon maqueda",
        "username": "jrmaqueda2024",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-16T19:32:07",
        "author_id": "3129469942",
        "data_id": "1891208959173824771",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 448,
        "audience_total": 90322,
        "total_reposts": 59,
        "post_count": 3,
        "author": "jorge guerron eras",
        "username": "toquilla_hat",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T01:10:38",
        "author_id": "949601058497511424",
        "data_id": "1891294148994424925",
        "reposts": 1,
        "post": "rt @zoomeye_team: \ud83d\udea8\ud83d\udea8cve-2025-1094: postgresql quoting apis miss neutralizing quoting syntax in text that fails encoding validation\n\u26a0\ufe0fthis f\u2026",
        "audience": 78,
        "audience_total": 90322,
        "total_reposts": 59,
        "post_count": 3,
        "author": "sudokom",
        "username": "sudokom",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T03:33:38",
        "author_id": "1604829856922947584",
        "data_id": "1891330134948381165",
        "reposts": 1,
        "post": "rt @__kokumoto: postgresql\u306epsql\u30c4\u30fc\u30eb\u306b\u304a\u3051\u308bsql\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u8106\u5f31\u6027cve-2025-1094\u306b\u5bfe\u5fdc\u3059\u308bmetasploit\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u516c\u958b\u3055\u308c\u305f\u3002\"!\"\u30e1\u30bf\u6587\u5b57\u3092\u4f7f\u7528\u3059\u308b\u4e8b\u3067\u4efb\u610f\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u53ef\u80fd\u3002 https://t.co/rafvxpv\u2026",
        "audience": 218,
        "audience_total": 90322,
        "total_reposts": 59,
        "post_count": 3,
        "author": "to_su",
        "username": "_to_su_",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T03:40:54",
        "author_id": "1580153001766944768",
        "data_id": "1891331966261203367",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 1159,
        "audience_total": 91686,
        "total_reposts": 68,
        "post_count": 3,
        "author": "gokul sk",
        "username": "goktest",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T07:32:01",
        "author_id": "187877797",
        "data_id": "1891390128720879700",
        "reposts": 1,
        "post": "rt @omokazuki: sios\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30d6\u30ed\u30b0\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\n\npostgresql\u306e\u8106\u5f31\u6027(important: cve-2025-1094)\u3068\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3(17.3, 16.7, 15.11, 14.16, 13.19)\n\nhttps://t.co/6oouxc\u2026",
        "audience": 44,
        "audience_total": 95748,
        "total_reposts": 83,
        "post_count": 4,
        "author": "explodingbox",
        "username": "exploding_box",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T07:35:39",
        "author_id": "1602730518",
        "data_id": "1891391044127777092",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 594,
        "audience_total": 95762,
        "total_reposts": 85,
        "post_count": 5,
        "author": "b\ud83d\udc1bg sn!p3r\ud83c\udfaf",
        "username": "m3y_mah",
        "v_score": 0.535507,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T06:44:25",
        "author_id": "738372026461622277",
        "data_id": "1891378151025987709",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 118,
        "audience_total": 91686,
        "total_reposts": 68,
        "post_count": 3,
        "author": "d4rk_c0r3",
        "username": "d4rk_c0r3",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T07:35:34",
        "author_id": "1602730518",
        "data_id": "1891391022841692173",
        "reposts": 1,
        "post": "rt @zoomeye_team: \ud83d\udea8\ud83d\udea8cve-2025-1094: postgresql quoting apis miss neutralizing quoting syntax in text that fails encoding validation\n\u26a0\ufe0fthis f\u2026",
        "audience": 594,
        "audience_total": 95760,
        "total_reposts": 84,
        "post_count": 5,
        "author": "b\ud83d\udc1bg sn!p3r\ud83c\udfaf",
        "username": "m3y_mah",
        "v_score": 0.535507,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T09:04:38",
        "author_id": "1144327052503465984",
        "data_id": "1891413437357404206",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 7050,
        "audience_total": 95762,
        "total_reposts": 85,
        "post_count": 5,
        "author": "luemmelsec",
        "username": "theluemmel",
        "v_score": 0.535507,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T07:35:29",
        "author_id": "1602730518",
        "data_id": "1891390999886242071",
        "reposts": 1,
        "post": "rt @onhexgroup: \u0622\u0633\u06cc\u0628 \u067e\u0630\u06cc\u0631\u06cc sqli \u062f\u0631 postgresql\n\n\u062f\u0631 \u0627\u06cc\u0646 \u067e\u0633\u062a \u0622\u0633\u06cc\u0628 \u067e\u0630\u06cc\u0631\u06cc cve-2025-1094 \u062f\u0631 postgresql \u0648 \u0627\u0631\u062a\u0628\u0627\u0637 \u0627\u0648\u0646 \u0628\u0627 \u0647\u06a9 #beyondtrust \u0648 \u0686\u0646\u062f\u06cc\u0646 \u0633\u0627\u2026",
        "audience": 594,
        "audience_total": 95748,
        "total_reposts": 83,
        "post_count": 4,
        "author": "b\ud83d\udc1bg sn!p3r\ud83c\udfaf",
        "username": "m3y_mah",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T05:12:25",
        "author_id": "1563876813503434752",
        "data_id": "1891354994663641529",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 264,
        "audience_total": 91686,
        "total_reposts": 68,
        "post_count": 3,
        "author": "\ud835\udce2a\ud835\udd91\ud835\udd99\ud835\udd8en\ud835\udd87a\ud835\udd93\u04c4 \u2664 deadsec \u2664",
        "username": "saltindeadsec",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T06:51:39",
        "author_id": "1671080980025868288",
        "data_id": "1891379968048787513",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 19,
        "audience_total": 95318,
        "total_reposts": 82,
        "post_count": 4,
        "author": "avinash",
        "username": "4vin458mah33",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T09:10:31",
        "author_id": "1872884985461633024",
        "data_id": "1891414916390625698",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 38,
        "audience_total": 98765,
        "total_reposts": 87,
        "post_count": 5,
        "author": "c3ypt",
        "username": "k3yptlc",
        "v_score": 0.572775,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T06:00:58",
        "author_id": "1329384780132085762",
        "data_id": "1891367214101434846",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 4,
        "audience_total": 91686,
        "total_reposts": 68,
        "post_count": 3,
        "author": "shyam sunder sharma",
        "username": "shyam__0708",
        "v_score": 0.506934,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": "https://pbs.twimg.com/profile_images/1516854030085279744/X6SCMbdr_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T11:35:53",
        "author_id": "3825013823",
        "data_id": "1891451498455838756",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 61,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "d. m\u00fcller",
        "username": "kbmuellerdo",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T10:01:34",
        "author_id": "407509875",
        "data_id": "1891427764521017782",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 24,
        "audience_total": 98933,
        "total_reposts": 89,
        "post_count": 6,
        "author": "danu van deventer",
        "username": "danu_dirjas",
        "v_score": 0.574618,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T12:20:30",
        "author_id": "126671687",
        "data_id": "1891462726657917279",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 187,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "edwin cardona \u2614",
        "username": "edwincardona",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T11:35:45",
        "author_id": "80112476",
        "data_id": "1891451463865413659",
        "reposts": 1,
        "post": "rt @__kokumoto: postgresql\u306epsql\u30c4\u30fc\u30eb\u306b\u304a\u3051\u308bsql\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u8106\u5f31\u6027cve-2025-1094\u306b\u5bfe\u5fdc\u3059\u308bmetasploit\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u516c\u958b\u3055\u308c\u305f\u3002\"!\"\u30e1\u30bf\u6587\u5b57\u3092\u4f7f\u7528\u3059\u308b\u4e8b\u3067\u4efb\u610f\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u53ef\u80fd\u3002 https://t.co/rafvxpv\u2026",
        "audience": 230,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "tachibana",
        "username": "natnihs",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T14:00:35",
        "author_id": "398460479",
        "data_id": "1891487915248697475",
        "reposts": 1,
        "post": "rt @elhackernet: \ud83d\udea8 vulnerabilidad cr\u00edtica en postgresql con inyecci\u00f3n sql\n\n\u26a0\ufe0f cve-2025-1094\nhttps://t.co/zfyhyekemf https://t.co/8pxmmp6rh8",
        "audience": 9,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "arturo perez luna",
        "username": "arturoperezluna",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T09:53:18",
        "author_id": "889888752214134789",
        "data_id": "1891425683072573461",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 231,
        "audience_total": 98810,
        "total_reposts": 88,
        "post_count": 5,
        "author": "sql3t0",
        "username": "sqleto",
        "v_score": 0.574478,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T09:16:00",
        "author_id": "1870122856224305154",
        "data_id": "1891416295465173413",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 4,
        "audience_total": 98810,
        "total_reposts": 88,
        "post_count": 5,
        "author": "slayer",
        "username": "suits_47",
        "v_score": 0.574478,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-16 21:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T10:48:25",
        "author_id": "1445687820882898951",
        "data_id": "1891439551719108747",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 23,
        "audience_total": 102050,
        "total_reposts": 90,
        "post_count": 6,
        "author": "decentralww",
        "username": "decentralww",
        "v_score": 0.574618,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T13:15:01",
        "author_id": "14219818",
        "data_id": "1891476446331232545",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 595,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "robertson",
        "username": "rsalinasg",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": "https://pbs.twimg.com/profile_images/620260577793847296/vnkluugX_normal.jpg",
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T17:02:15",
        "author_id": "381912027",
        "data_id": "1891533630754767191",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 271,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "juan pablo perata",
        "username": "cxzero",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T14:50:18",
        "author_id": "335081717",
        "data_id": "1891500425003589661",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 234,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "laura s",
        "username": "thekn0ck0ut",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T14:39:02",
        "author_id": "1592666001899868160",
        "data_id": "1891497590723600809",
        "reposts": 1,
        "post": "rt @helpnetsecurity: a postgresql zero-day was also exploited in us treasury hack (cve-2025-1094) - https://t.co/kodryjzanl - @rapid7 @step\u2026",
        "audience": 60,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "charlie foxtrot",
        "username": "cfox84",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T13:55:41",
        "author_id": "T2_A6VMM",
        "data_id": "1IRKD81",
        "reposts": 11,
        "post": "a postgresql zero-day was also exploited in us treasury hack (cve-2025-1094)",
        "audience": 3067,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "tekz",
        "username": "t3_1irkd81",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-17T20:06:46",
        "author_id": "470249303",
        "data_id": "1891580067462979869",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 430,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "ramella s\u00e9bastien",
        "username": "mekhalleh",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-18T00:17:13",
        "author_id": "1581188166941220865",
        "data_id": "1891643093541097606",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 3,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "seunghy l",
        "username": "lseunghy",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-18T03:22:16",
        "author_id": "1550288596845854720",
        "data_id": "1891689662260855086",
        "reposts": 0,
        "post": "https://t.co/dfdriclfog",
        "audience": 9,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "jas s",
        "username": "grimmanalyst",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-18T05:06:03",
        "author_id": "1518389455911985152",
        "data_id": "1891715782767194319",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 2,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "tro j\u00e4n",
        "username": "_tro_jan_",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-19T00:46:30",
        "author_id": "134916811",
        "data_id": "1892012850891108834",
        "reposts": 1,
        "post": "rt @cirtgovjm: alert ! \ud83d\udea8a high-severity vulnerability (cve-2025-1094, cvss 8.1) in postgresql, due to improper quoting syntax in several li\u2026",
        "audience": 1342,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "lance cameron",
        "username": "vishtany",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-19T00:05:37",
        "author_id": "2589318132",
        "data_id": "1892002564251472135",
        "reposts": 1,
        "post": "rt @cirtgovjm: alert ! \ud83d\udea8a high-severity vulnerability (cve-2025-1094, cvss 8.1) in postgresql, due to improper quoting syntax in several li\u2026",
        "audience": 1661,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "wilson",
        "username": "yaadmeki",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-20T03:04:30",
        "author_id": "1311528603117588481",
        "data_id": "1892409966813724733",
        "reposts": 1,
        "post": "rt @cirtgovjm: alert ! \ud83d\udea8a high-severity vulnerability (cve-2025-1094, cvss 8.1) in postgresql, due to improper quoting syntax in several li\u2026",
        "audience": 45,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "godphey sterling",
        "username": "head_jacirt",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-23T06:50:03",
        "author_id": "1263826086212878336",
        "data_id": "1893553893658841206",
        "reposts": 1,
        "post": "rt @huntermapping: \ud83d\udea8alert\ud83d\udea8 cve-2025-1094: postgresql psql sql injection\n\ud83d\udd25poc:https://t.co/gyeczn1ose\n\ud83e\uddd0deep dive :https://t.co/t4df4l1hgi\n\ud83d\udcca\u2026",
        "audience": 47,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "r0d3!v",
        "username": "andre_achy",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-25T00:18:41",
        "author_id": "1771287613481132032",
        "data_id": "1894180178814796201",
        "reposts": 0,
        "post": "threat_article_url: https://t.co/vdspsgysgf",
        "audience": 76,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "transilienceai",
        "username": "transilienceai",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-03-01T14:25:40",
        "author_id": "9731332",
        "data_id": "1895842880205586471",
        "reposts": 1,
        "post": "rt @osec__: \ud83d\udfe1 postgresql zero-day (cve-2025-1094) exploited in beyondtrust breach, linked to chinese state-backed hackers targeting u.s. tr\u2026",
        "audience": 3117,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "scarletto",
        "username": "scarletto",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-03-10T06:13:42",
        "author_id": "1690717975324835841",
        "data_id": "1898980563144577085",
        "reposts": 1,
        "post": "rt @akaclandestine: github - soltanali0/cve-2025-1094-exploit: websocket and sql injection exploit script https://t.co/1fzpgr46zk",
        "audience": 37,
        "audience_total": 102087,
        "total_reposts": 91,
        "post_count": 6,
        "author": "tu tri mi",
        "username": "trimituvn",
        "v_score": 0.575043,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-03-20T14:49:02",
        "author_id": "98051973",
        "data_id": "1902734130527527182",
        "reposts": 1,
        "post": "rt @01ra66it: postgresql\u306epsql\u306bsql\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306e\u8106\u5f31\u6027\uff08cve-2025-1094\uff09\u304c\u767a\u898b\u3055\u308c\u3001\u653b\u6483\u8005\u304c\u4efb\u610f\u306eos\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \u5f71\u97ff\u3092\u53d7\u3051\u308b\u306e\u306f\u300117.3\u300116.7\u300115.11\u300114.16\u300113.19\u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3001\u2026",
        "audience": 1959,
        "audience_total": 3056,
        "total_reposts": 2,
        "post_count": 0,
        "author": "\u3048\u305e\u305f/\u306c\u304d\u306b\u306a\u308a\u305f\u3044\uff08\u3082\u307f\u3058\uff09",
        "username": "acer_ex",
        "v_score": 0.45114,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-03-21T01:09:38",
        "author_id": "14146995",
        "data_id": "1902890310381998537",
        "reposts": 1,
        "post": "rt @01ra66it: postgresql\u306epsql\u306bsql\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306e\u8106\u5f31\u6027\uff08cve-2025-1094\uff09\u304c\u767a\u898b\u3055\u308c\u3001\u653b\u6483\u8005\u304c\u4efb\u610f\u306eos\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \u5f71\u97ff\u3092\u53d7\u3051\u308b\u306e\u306f\u300117.3\u300116.7\u300115.11\u300114.16\u300113.19\u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3001\u2026",
        "audience": 1097,
        "audience_total": 3056,
        "total_reposts": 2,
        "post_count": 0,
        "author": "\ud83d\udc36\u308f\u3093\u308f\u3093\u304a",
        "username": "yoshifuji_tokyo",
        "v_score": 0.45114,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-04-15T12:20:04",
        "author_id": "T2_FT6P9",
        "data_id": "1JZQGAP",
        "reposts": 4,
        "post": "cve-2025-1094",
        "audience": 756,
        "audience_total": 756,
        "total_reposts": 4,
        "post_count": 1,
        "author": "thefinalep",
        "username": "t3_1jzqgap",
        "v_score": 0.448508,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-04-30T18:07:52",
        "author_id": "887353221995474945",
        "data_id": "1917642069222252695",
        "reposts": 1,
        "post": "rt @hackyboiz: [1day1line] cve-2025-1094: rce due to sql injection in postgresql 14.15\ncve-2025-1094 is a sql injection vulnerability found\u2026",
        "audience": 460,
        "audience_total": 460,
        "total_reposts": 1,
        "post_count": 0,
        "author": "x_kelvin",
        "username": "254_society_",
        "v_score": 0.448269,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-05-07T07:55:58",
        "author_id": "98220139",
        "data_id": "1920024795950747929",
        "reposts": 1,
        "post": "rt @todaycybernews: cve-2025-1094\n*\nrce sql injection in postgresql 14.15\n*\nexploit\n\n#sql #cybersecurity #bugbounty #rce https://t.co/0qd2a\u2026",
        "audience": 51,
        "audience_total": 249,
        "total_reposts": 2,
        "post_count": 0,
        "author": "antonio taboada \ud83c\uddea\ud83c\uddf8 hackingyseguridad.com",
        "username": "antonio_taboada",
        "v_score": 0.448407,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-05-07T10:18:46",
        "author_id": "1198062853049049090",
        "data_id": "1920060734093828605",
        "reposts": 1,
        "post": "rt @todaycybernews: cve-2025-1094\n*\nrce sql injection in postgresql 14.15\n*\nexploit\n\n#sql #cybersecurity #bugbounty #rce https://t.co/0qd2a\u2026",
        "audience": 198,
        "audience_total": 249,
        "total_reposts": 2,
        "post_count": 0,
        "author": "kor888",
        "username": "korjk888",
        "v_score": 0.448407,
        "e_score": 0.00043,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-21 18:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    }
]
[
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-13T23:26:43",
        "author_id": "139850182",
        "data_id": "1890180834151555331",
        "reposts": 1,
        "post": "rt @stephenfewer: today @rapid7 has disclosed cve-2025-1094, a new postgresql sqli vuln we discovered while researching cve-2024-12356 in b\u2026",
        "audience": 6559,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "scriptjunkie (matt)",
        "username": "scriptjunkie1",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T01:08:43",
        "author_id": "155434175",
        "data_id": "1890206504969711669",
        "reposts": 1,
        "post": "rt @rapid7: \ud83d\udea8 in january 2025, rapid7 discovered a high-severity sql injection vulnerability, cve-2025-1094, affecting the #postgresql inte\u2026",
        "audience": 39,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "show",
        "username": "showthelow",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T02:42:22",
        "author_id": "8236572",
        "data_id": "1890230073137197392",
        "reposts": 1,
        "post": "rt @stephenfewer: today @rapid7 has disclosed cve-2025-1094, a new postgresql sqli vuln we discovered while researching cve-2024-12356 in b\u2026",
        "audience": 27876,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "ryan naraine",
        "username": "ryanaraine",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T05:07:05",
        "author_id": "1749757936484728832",
        "data_id": "1890266492337528865",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 392,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "the naeth",
        "username": "tnaeth123",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T08:11:34",
        "author_id": "1378655029",
        "data_id": "1890312917251162521",
        "reposts": 1,
        "post": "rt @netlas_io: cve-2025-1094: improper neutralization of quoting syntax in postgresql functions, 8.1 rating\u2757\ufe0f\n\na vulnerability in some func\u2026",
        "audience": 70,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "makhrov vyacheslav",
        "username": "v_makhrov",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T06:43:24",
        "author_id": "14488562",
        "data_id": "1890290729261625549",
        "reposts": 1,
        "post": "rt @t_nihonmatsu: postgresql\u306e\u6587\u5b57\u5217\u30a8\u30b9\u30b1\u30fc\u30d7\u95a2\u6570\u306f\u7121\u52b9\u306autf-8\u6587\u5b57\u306b\u542b\u307e\u308c\u308b\u4e0d\u6b63\u306a\u30d0\u30a4\u30c8\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u3001psql\u306e\u89e3\u6790\u306b\u3088\u3063\u3066\u4e88\u671f\u3057\u306a\u3044\u5f62\u3067\u6271\u308f\u308c\u308b\u3053\u3068\u3067sql\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u3068\u306a\u308b\u8106\u5f31\u6027 cve-2025-1094\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u4fee\u6b63\u2026",
        "audience": 2366,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "\u30b5\u30eb\u30c8",
        "username": "saruto",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T13:01:54",
        "author_id": "1635099816215851008",
        "data_id": "1890385983771718129",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 14,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "chris techjourney",
        "username": "christechvc",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T11:18:54",
        "author_id": "30956648",
        "data_id": "1890360062595518485",
        "reposts": 1,
        "post": "rt @catc0n: new rapid7 vuln disclosure c/o @stephenfewer: cve-2025-1094 is a sql injection flaw in postgresql's psql interactive tool that\u2026",
        "audience": 218,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "walter magliano",
        "username": "wmagliano",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T13:47:18",
        "author_id": "953682855372009472",
        "data_id": "1890397408258908587",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 314,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "ncu-isao",
        "username": "ncuisao",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T11:26:56",
        "author_id": "1344491316139462658",
        "data_id": "1890362084468101192",
        "reposts": 1,
        "post": "rt @stephenfewer: today @rapid7 has disclosed cve-2025-1094, a new postgresql sqli vuln we discovered while researching cve-2024-12356 in b\u2026",
        "audience": 16,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "syntheticliver",
        "username": "almond65808926",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T16:10:16",
        "author_id": "438353100",
        "data_id": "1890433388361699546",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 443,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "redport ia",
        "username": "redport_ia",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T18:30:41",
        "author_id": "123219953",
        "data_id": "1890468725125493018",
        "reposts": 1,
        "post": "rt @ccbalert: warning: high severity sql injection vulnerability in #postgresql. #cve-2025-1094 cvss: 8.1. this sqli vulnerability can lead\u2026",
        "audience": 1067,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "phd",
        "username": "phjedi",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T17:14:46",
        "author_id": "T2_1GRE3RWZYG",
        "data_id": "1IPFK3Q",
        "reposts": 2,
        "post": "postgresql &amp; beyondtrust zero-days exploited in coordinated attacks",
        "audience": 24,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "dark-marc",
        "username": "t3_1ipfk3q",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T17:18:37",
        "author_id": "T2_1GRE3RWZYG",
        "data_id": "1IPFNHS",
        "reposts": 4,
        "post": "postgresql &amp; beyondtrust zero-days exploited in coordinated attacks",
        "audience": 630,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "dark-marc",
        "username": "t3_1ipfnhs",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T17:18:31",
        "author_id": "T2_1GRE3RWZYG",
        "data_id": "1IPFNER",
        "reposts": 2,
        "post": "postgresql &amp; beyondtrust zero-days exploited in coordinated attacks",
        "audience": 326,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "dark-marc",
        "username": "t3_1ipfner",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-14T17:18:42",
        "author_id": "T2_1GRE3RWZYG",
        "data_id": "1IPFNKF",
        "reposts": 5,
        "post": "postgresql &amp; beyondtrust zero-days exploited in coordinated attacks",
        "audience": 712,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "dark-marc",
        "username": "t3_1ipfnkf",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "reddit"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T01:30:48",
        "author_id": "2976398873",
        "data_id": "1890574450506031235",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 374,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "mohamed amine \ud83c\uddf9\ud83c\uddf3",
        "username": "da_crypto_freak",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    },
    {
        "cve": "CVE-2025-1094",
        "created_datetime": "2025-02-15T02:30:13",
        "author_id": "1873293971876900864",
        "data_id": "1890589403044552827",
        "reposts": 1,
        "post": "rt @thehackersnews: \ud83d\uded1 a dangerous combo attack has been discovered exploiting a postgresql sql injection flaw (cve-2025-1094) and a beyondt\u2026",
        "audience": 236,
        "audience_total": 40696,
        "total_reposts": 19,
        "post_count": 1,
        "author": "jace hawkins",
        "username": "thejacehawkins",
        "v_score": 0.582903,
        "e_score": null,
        "base_score": "8.1",
        "description": "IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL LIBPQ FUNCTIONS PQESCAPELITERAL(), PQESCAPEIDENTIFIER(), PQESCAPESTRING(), AND PQESCAPESTRINGCONN() ALLOWS A DATABASE INPUT PROVIDER TO ACHIEVE SQL INJECTION IN CERTAIN USAGE PATTERNS.  SPECIFICALLY, SQL INJECTION REQUIRES THE APPLICATION TO USE THE FUNCTION RESULT TO CONSTRUCT INPUT TO PSQL, THE POSTGRESQL INTERACTIVE TERMINAL.  SIMILARLY, IMPROPER NEUTRALIZATION OF QUOTING SYNTAX IN POSTGRESQL COMMAND LINE UTILITY PROGRAMS ALLOWS A SOURCE OF COMMAND LINE ARGUMENTS TO ACHIEVE SQL INJECTION WHEN CLIENT_ENCODING IS BIG5 AND SERVER_ENCODING IS ONE OF EUC_TW OR MULE_INTERNAL.  VERSIONS BEFORE POSTGRESQL 17.3, 16.7, 15.11, 14.16, AND 13.19 ARE AFFECTED.",
        "last_modified_datetime": "2025-02-13 22:15:00",
        "published_datetime": "2025-02-13 13:15:00",
        "vendor_logo": null,
        "profile_url": null,
        "feed_name": "twitter"
    }
]